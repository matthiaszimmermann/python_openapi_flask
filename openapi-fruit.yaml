

openapi: 3.0.1
info:
  title: OpenAPI specification for managing fruits resource
  description: Fruit resources Open API documentation, based on recommendations from https://florimond.dev/en/posts/2018/08/restful-api-design-13-best-practices-to-make-your-users-happy/
  version: "1.0"

servers:
  - url: '{protocol}://{tenantId}.localhost:8080/api/{versionId}'
    description: OpenAPI server base path
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      tenantId:
        default: demo
        description: Unique tenant ID
      versionId:
        enum:
          - v1
          - v2
        default: v1
        description: API version

paths:
  /fruits:
    get:
      description: List all fruits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fruit'
    post:
      description: Create this fruit as a resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fruit'
      responses:
        '201':
          description: Created - new fruit resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FruitId'
        '400':
          description: Object validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
    delete:
      description: Delete all fruits
      deprecated: true
      responses:
        '200':
          description: OK - all fruit resources deleted
          content:
            application/json: {}
  
  /fruits/{fruit_id}:
    get:
      description: Get a single fruit
      parameters:
        - $ref: '#/components/parameters/FruitIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fruit'
        '404':
          description: Fruit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      description: Update the fruit with the specified id
      parameters:
        - $ref: '#/components/parameters/FruitIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '404':
          description: Fruit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      description: Delete the fruit with the specified id
      parameters:
        - $ref: '#/components/parameters/FruitIdParam'
      responses:
        '204':
          description: No Content - specified fruit deleted
          content:
            application/json: {}
        '404':
          description: Fruit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

components:
  parameters:
    FruitIdParam:
      name: fruit_id
      in: path
      description: A resource identifier
      required: true
      schema:
        type: string
        format: uuid
      example: '8dd6f91d-6378-4f52-b817-00cbc85ca39e'

  schemas:
    Fruit:
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the fruit
          example: '8dd6f91d-6378-4f52-b817-00cbc85ca39e'
        name:
          type: string
          description: The name of the fruit
          maxLength: 32
          example: 'lemon'
        pick_date:
          type: string
          format: date-time
          description: Date and time when the fruit has been picked
        weight:
          type: number
          description: Weight of this fruit in grams (g)
          minimum: 0.1
          maximum: 10000.0
          example: 150

    FruitId:
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the fruit
          example: '8dd6f91d-6378-4f52-b817-00cbc85ca39e'

    BadRequestError:
      properties:
        message: 
          type: string
          description: Human readable error message
          example: 'When posting fruits no ID attribute must be provided'

    NotFoundError:
      properties:
        id: 
          type: string
          description: The query ID
          example: '8dd6f91d-6378-4f52-b817-00cbc85ca39e'
        message: 
          type: string
          description: Human readable error message
          example: 'No resource for the provided ID found'
